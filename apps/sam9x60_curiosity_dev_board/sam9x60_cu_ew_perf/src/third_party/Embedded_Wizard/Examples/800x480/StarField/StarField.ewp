$version 13.00

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,70,240,110>
unit Core
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,110,240,150>
unit Resources
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,150,240,190>
unit Graphics
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,190,240,230>
unit Effects
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard framework 'Mosaic'
$rect <40,230,240,270>
unit Views
{
  attr Directory = $Mosaic;
}

// The 'default' Language. Each project has to contain at least one language brick \
// called 'Default'
$rect <540,70,740,110>
language Default;

// This unit is intended to contain the application class and another GUI components.
$rect <40,430,240,470>
unit Application
{
  attr Directory = .\;
}

// This is a unit.
$rect <40,470,240,510>
unit StarField
{
  attr Directory = .\;
}

$rect <40,270,240,310>
unit WidgetSet
{
  attr Directory = $Mosaic\;
}

$rect <40,510,240,550>
unit GraphicsSystem
{
  attr Directory = .\;
}

$rect <40,310,240,350>
unit Templates
{
  attr Directory = $Mosaic\;
}

// Mosaic Framework
note group Note1
{
  attr Bounds = <20,20,260,370>;
}

// Profile Configuration
note group Note2
{
  attr Bounds = <270,20,510,130>;
}

// Languages
note group Note3
{
  attr Bounds = <520,20,760,130>;
}

// Project Units
note group Note5
{
  attr Bounds = <20,380,260,570>;
}

// The sample application 'StarField' implements a star field animation with a variable \
// number of images within the 3D space. For this purpose the functionality of Views::WarpImage \
// is used.
// The user can configure the different parameters of the star field animation like \
// speed, count or eye distance.
// 
// You can double-click on the 'StarField' brick to open the unit within the Composer \
// and to analyze the implementation.
// 
// To start the application within the Prototyper press 'Ctrl'+'F5'.
note legend Note
{
  attr Bounds = <270,140,760,370>;
}

// Important note: This demo application deals with many images and makes extensive \
// usage of the Warp3D() functionality.
// 
// To run this demo with an impressive performance on a certain target, please ensure \
// that the target system provides sufficient graphics power to make many 3D drawing \
// operations per frame.
// Ideally, the target provides a 3D graphics core and OpenGL ES 2.0.
note legend Note4
{
  attr Bounds = <270,380,760,570>;
}

// This is a profile member for the project. This profile controls the code generation \
// for the target system.
$rect <290,70,490,110>
profile STM32 : STM.STM32_NeoChrom.RGB565
{
  attr ScreenSize = <800,480>;
  attr Optimization = High;
  attr ApplicationClass = Application::Application;
  attr CleanOutputDirectories = true;
  attr Verbose = false;
  attr ScreenOrientation = Normal;
  attr FontConversion = Windows;
  attr OutputFileNameExtension = c;
  attr ModeOfBitmapResources = DirectAccess;
  attr ModeOfStringConstants = Compressed;
  attr OutputDirectory = ..\..\..\Application\GeneratedCode;

  $rect <10,10,154,50>
  macro Author = "Dipl. Ing. Paul Banach and Dipl. Ing. Manfred Schweyer, Copyright (C) TARA Systems GmbH";
}
